@model Models.Product

@{
    ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Products",FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        @Html.ValidationSummary(true)

        <div class="form-group">
      
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Title)

                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UrlParam, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.UrlParam)

                @Html.ValidationMessageFor(model => model.UrlParam)
            </div>
        </div>
					
					
					
	        <div class="form-group">
		        @Html.LabelFor(model => model.Summery, new { @class = "control-label col-md-2" })
		        <div class="col-md-10">
			        @Html.EditorFor(model => model.Summery)

			        @Html.ValidationMessageFor(model => model.Summery)
		        </div>
	        </div>


	        <div class="form-group">
			<div class="col-md-2">
            </div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsFree)

				@Html.LabelFor(model => model.IsFree)
                @Html.ValidationMessageFor(model => model.IsFree)
            </div>
        </div>

	        <div class="form-group">
		        @Html.LabelFor(model => model.FileUrl, new { @class = "control-label col-md-2" })
		        <div class="col-md-10">
			        @Html.Kendo().Upload().Name("fileupload2").Multiple(false)
			        @Html.ValidationMessageFor(model => model.FileUrl)
		        </div>
	        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount)

                @Html.ValidationMessageFor(model => model.Amount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Body)

                @Html.ValidationMessageFor(model => model.Body)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.Kendo().Upload().Name("fileUpload").Multiple(false)
                @Html.ValidationMessageFor(model => model.ImageUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductGroupId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductGroupId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductGroupId)
            </div>
        </div>

	        <div class="form-group">
		        @Html.LabelFor(model => model.DiscountAmount, new { @class = "control-label col-md-2" })
		        <div class="col-md-10">
			        @Html.EditorFor(model => model.DiscountAmount)

			        @Html.ValidationMessageFor(model => model.DiscountAmount)
		        </div>
	        </div> 

	        <div class="form-group">
		        <div class="col-md-2">
		        </div>
		        <div class="col-md-10">
			        @Html.EditorFor(model => model.IsPhysicalProduct)

			        @Html.LabelFor(model => model.IsPhysicalProduct)
			        <dfn>این فیلد برای دریافت آدرس از کاربر هنگام ثبت سفارش می باشد</dfn>	
						</div>
	        </div>

	        <div class="form-group">
			<div class="col-md-2">
            </div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsInPromotion)

				@Html.LabelFor(model => model.IsInPromotion)
                @Html.ValidationMessageFor(model => model.IsInPromotion)
            </div>
        </div>

        <div class="form-group">
			<div class="col-md-2">
            </div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsInHome)

				@Html.LabelFor(model => model.IsInHome)
                @Html.ValidationMessageFor(model => model.IsInHome)
            </div>
        </div>

        <div class="form-group">
			<div class="col-md-2">
            </div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsActive)

				@Html.LabelFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModifiedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.LastModifiedDate)

                @Html.ValidationMessageFor(model => model.LastModifiedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)

                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ایجاد" class="btn btn-primary" />
				@Html.ActionLink("بازگشت به فهرست", "Index")
            </div>
        </div>
        </div>
</div>
}

